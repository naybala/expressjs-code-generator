export default function validationTemplate(
  name,
  pluralName,
  pascalName,
  camelName,
  repoName,
  type,
  extraFields = []
) {
  const generateValidationLines = (fields, isUpdate = false) => {
    return fields
      .map((field) => {
        const base = `body("${field.name}")`;
        let check = "";        
        check = `${base}.notEmpty().withMessage("${field.name} is required")`;
        return check;
      })
      .join(",\n  ");
  };

  return `import { body, param, ValidationChain } from "express-validator";

/**
 *
 * The ${pascalName}Validation is implemented for validation of DB columns.
 * Generated By mini-express-generator(https://www.npmjs.com/package/mini-express-generator)
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 * SOP @author Htin Lin Phyo
 * https://github.com/htinlinnphyo123
 * https://htinlinnphyo.vercel.app/
 *
 */

export const store${pascalName}Validator: ValidationChain[] = [
  ${generateValidationLines(extraFields)}
];

export const update${pascalName}Validator: ValidationChain[] = [
  param("id").notEmpty().withMessage("ID is required"),
  ${generateValidationLines(extraFields, true)}
];
`;
}
